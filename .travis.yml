dist: trusty
sudo: false
language: python

env:
  global:
  - ORGNAME="omnia"
  - USERNAME="nathanmlim"
  - PKG_NAME="blues"
  - TAG="0.2.4"
  - RELEASE=true
  - BRANCH="ci-deploy"
  - CONDA_ENV="${PKG_NAME}-${TRAVIS_OS_NAME}"
  - OE_LICENSE="$HOME/oe_license.txt"
  - OPENEYE_CHANNEL="-i https://pypi.anaconda.org/openeye/channel/main/simple"
  - OPENEYE_BETA="https://pypi.anaconda.org/openeye/label/beta/simple"

  matrix:
    secure: oxxCyFfhIGIJj9QieZHnJ5D1KX0zfm15tn3jCDPdMcimDvuL42qf0dBNHDu3dTSZorG6U0Mz+5+ESoVsdz6q+96m0oDY4t/tKftC4IGddKFBJDVVDxnoB2ebPIGttAIAjl6VWLrNNJotnFPkQOX89NgbDFQtcteOnRq4EZ4kgDjhADkikVi9kqBJxrN60QYRyWt4G5qHyxOtEetK385v9O5yBjqN3N0im/mV23zv6q5LjaMcRJlScGlXWomwkU4+rifQ6PoAhtHnVQqRili2RAaeWMUsDTRP3oe9/mX2niUeIAG9JdmUg1TNkdj00oA8JunZaqAEHP0Q7h1XlPyX6UUExUn9lKi1DhN563z4PsmWvLI5Nx4OssLvTIpBowjs6FDVN+QX0/bGpbfVr8+yaD0dpvMO7d/52XHsHLLSWFqRT77YEudPHh4VLr9D+9910TKQdXbOfZYhrAVTYLeJBbktguNNakxwx/tblcswsWtzcZyKhSKYxyk9wWDNqOQfB/KY1l5OO6hgK6cZJQVlZEet7rXFzq2JeQq1zQLcdPEwWcbyUbt4m35ASQDfx0Dm/Rw4ASD6la6sh7G+SBMuIvcYwVJy5hK+Nifo9qZtNTCT5WZwHhQzal54xf2SgGRXt0lsMB6N7IiDxotax3OyM/EBeMiHJX2duS7EL5wax4k=
matrix:
  include:
    # Extra includes for OSX since python language is not available by default on OSX
    # - os: osx
    #   language: generic
    #   env:
    #       - CONDA_PY="35"
    #       - PYTHON_VER="3.5"
    # - os: osx
    #   language: generic
    #   env:
    #       - CONDA_PY="36"
    #       - PYTHON_VER="3.6"

    - os: linux
      python: 3.5
      env: CONDA_PY="35" PYTHON_VER="3.5"
    # - os: linux
    #   python: 3.6
    #   env:
    #       - CONDA_PY="36"
    #       - PYTHON_VER="3.6"

branches:
  only:
    - ci-deploy

before_install:
- uname -a
- source devtools/travis-ci/before_install.sh
- python -V
- conda update --yes -q conda
- conda config --set always_yes true --set changeps1 no
- conda config --set anaconda_upload no
- conda config --add channels omnia
- conda config --add channels conda-forge
- export TRAVIS_BRANCH="${BRANCH}"
- 'if [ ${RELEASE} = "true" ]; then
      echo "Deploying RELEASE build" ;
      git push origin :refs/tags/${TAG} ;
      git tag -fa ${TAG} ;
      git push origin ${BRANCH} --tags ;
      export LABEL="main" ;
      export TRAVIS_TAG=${GIT[0]} ;
  else
      echo "Deploying DEV build";
      export LABEL="dev";
      export TRAVIS_TAG= $( git describe --tags` ) ;
  fi'
- echo $TRAVIS_BRANCH
- echo $TRAVIS_TAG
- echo $TRAVIS_PYTHON_VERSION
- echo $PYTHON_VER

install:
- conda create -n ${CONDA_ENV} python=${PYTHON_VER} pip pytest pytest-cov
- conda activate ${CONDA_ENV}
- pip install codecov
- conda build -q --python=${PYTHON_VER} devtools/conda-recipe
- conda install --use-local -q ${PKG_NAME}
- conda list

script:
- pytest -v -s --cov=blues blues/tests/

after_success:
- codecov
- chmod +x ./devtools/conda-recipe/conda_upload.sh
- echo $TRAVIS_BRANCH
- export CONDA_BLD_FILE=`conda build --python=${PYTHON_VER} devtools/conda-recipe
  --output`
- chmod +x ./devtools/travis-ci/sphinx_make.sh
- sh ./devtools/travis-ci/sphinx_make.sh

before_deploy:
- git config --local user.name ${USERNAME}
- git config --local user.email ${USERNAME}@gmail.com

deploy:

# Upload the built anaconda package to Anaconda.org
- provider: script
  skip_cleanup: true
  script: "./devtools/conda-recipe/conda_upload.sh"
  on:
    branch: $TRAVIS_BRANCH
    #tags: true

# Issue a github release from the master branch
- provider: releases
  api_key: $GITHUB_RELEASES
  file: $CONDA_BLD_FILE
  skip_cleanup: true
  on:
    branch: $TRAVIS_BRANCH
    #tags: true #Deploys when $TRAVIS_TAG is set

# Display docs on Github Pages from master branch
- provider: pages
  skip-cleanup: true
  github-token: $GITHUB_RELEASES  # Set in the settings page of your repository, as a secure variable
  keep-history: true
  local-dir: docs/_build/html/
  target-branch: gh-pages
  on:
    branch: $TRAVIS_BRANCH
    #tags: true
