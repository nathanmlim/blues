dist: trusty
sudo: false
language: python
branches:
  only:
  - ci-deploy
env:
  global:
  - ORGNAME="omnia"
  - USERNAME="nathanmlim"
  - PKG_NAME="blues"
  - RELEASE=true
  - CONDA_ENV="${PKG_NAME}-${TRAVIS_OS_NAME}"
  - OE_LICENSE="$HOME/oe_license.txt"
  - OPENEYE_CHANNEL="-i https://pypi.anaconda.org/openeye/channel/main/simple"
  - OPENEYE_BETA="https://pypi.anaconda.org/openeye/label/beta/simple"
  matrix:
    secure: sUnZFjMgrhNYx50NIYoYw+TDJN9TD6gcWHfs/IVxf3NT3tWR+EQ3tFeMlIIlEoY8eRzTCV7rwkYaJNBD4lpdjUeFCBWbkBp0OlgmD7uLVJ+ZjTk+pYeeI9jrJGhxKRH9JYZxvb4XbelP1mJ1Vo936T0i1yUslOSzoakrBfdricZkg5tw8sLEhSFIhdsorsrDWKTquOOIUvwev2a19tOs9o+bgTEdaekiwA3dzZX2386R79DkD4GmCJZidG2AE9+wOReC2Kfr8aZySBaX+oTv19gMNFMHaWlEVaGaNPZOVSawgBml0WhRwc1KrrnEUie2+RcDY/+3IaA6NwF2j8YkSCsMPKT0FftiI+ekCQTXOrQpL97oCavG/pDNSWcKc4Lw4WYfnesdJZxx0p7p3KgdEyAyW20USVjCePBnYc+/0/UhDMrgcoiOCB3JgHn1mvlptV9uX6Adl+lucsRaHP2Kk7vLtO+R/WS65YggGwrwshIrHdgIHgvxzkrkxcQnkXFtZuA6pcEIWbWlf8EK7yEaK3JAH3qFzYTtfK/MuMtsxKaOU+Gm/Hh2yMLtbhHnkd1SkV7Cq0ycbiGXEb+FbNrc056qDLAzFNzzH4hm4gY0s2izicF8pRcTOHP5F/UVKsq8RBlXnBalqONGVZx+42NRVK87mZy939MUAtTB/vBk+FQ=
matrix:
  include:
    # Extra includes for OSX since python language is not available by default on OSX
    # - os: osx
    #   language: generic
    #   env:
    #       - CONDA_PY="35"
    #       - PYTHON_VER="3.5"
    # - os: osx
    #   language: generic
    #   env:
    #       - CONDA_PY="36"
    #       - PYTHON_VER="3.6"

    - os: linux
      python: 3.5
      env:
          - CONDA_PY="35"
          - PYTHON_VER="3.5"
    # - os: linux
    #   python: 3.6
    #   env:
    #       - CONDA_PY="36"
    #       - PYTHON_VER="3.6"
before_install:
- uname -a
- source devtools/travis-ci/before_install.sh
- python -V
- conda update --yes -q conda
- conda config --set always_yes true --set changeps1 no
- conda config --set anaconda_upload no
- conda config --add channels omnia
- conda config --add channels conda-forge
install:
# Parse Github Tag into BASH array
- IFS="- " read -r -a GIT <<< `git describe --tags`
- if ${RELEASE} ; then echo 'Deploying RELEASE build' && LABEL='main' && TRAVIS_TAG=${GIT[0]} ; git tag ${TRAVIS_TAG} ; else ; echo 'Deploying DEV build' && LABEL='dev' ; fi
- conda create -n ${CONDA_ENV} python=${PYTHON_VER} pip pytest pytest-cov
  conda-verify
- conda activate ${CONDA_ENV}
- pip install codecov
- conda build -q --python=${PYTHON_VER} devtools/conda-recipe
- conda install --use-local -q ${PKG_NAME}
- conda list
<<<<<<< HEAD

=======
# Parse Github Tag into BASH array
- IFS="- " read -r -a GIT <<< `git describe --tags`
- if ${RELEASE} ; then echo 'Deploying RELEASE build' && LABEL='main' && TRAVIS_TAG=${GIT[0]} ; git tag ${TRAVIS_TAG} ; else ; echo 'Deploying DEV build' && LABEL='dev' ; fi
>>>>>>> 022a817d8b617ad38225492003f20124b93630fa
script:
- pytest -v -s --cov=blues blues/tests/
after_success:
- codecov
- test $TRAVIS_BRANCH = "master" && chmod +x  ./devtools/conda-recipe/conda_upload.sh
before_deploy:
- git config --local user.name ${USERNAME}
- git config --local user.email ${USERNAME}@gmail.com
- export CONDA_BLD_FILE=`conda build --python=${PYTHON_VER} devtools/conda-recipe
  --output`

deploy:

# Upload the built anaconda package to Anaconda.org
- provider: script
  skip_cleanup: true
  script: "./devtools/conda-recipe/conda_upload.sh"
  on:
    #branch: master
    tags: true

# Issue a github release from the master branch
- provider: releases
  api_key: $GITHUB_RELEASES
  file: $CONDA_BLD_FILE
  skip_cleanup: true
  on:
    #branch: master
    tags: true #Deploys when $TRAVIS_TAG is set

# Display docs on Github Pages from master branch
- provider: pages
  skip-cleanup: true
  github-token: $GITHUB_RELEASES  # Set in the settings page of your repository, as a secure variable
  keep-history: true
  local-dir: docs/_build/
  target-branch: master
  on:
    tags: true
    #branch: master
